From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: JRoy <joshroy126@gmail.com>
Date: Wed, 7 Oct 2020 12:04:01 -0400
Subject: [PATCH] Add EntityLoadCrossbowEvent


diff --git a/src/main/java/net/minecraft/world/item/ItemCrossbow.java b/src/main/java/net/minecraft/world/item/ItemCrossbow.java
index ec6c0836f02e7ac5b72fd224a3022a844dce55cb..7961c09ed5f6131364f73af97b7740ff7a9471b7 100644
--- a/src/main/java/net/minecraft/world/item/ItemCrossbow.java
+++ b/src/main/java/net/minecraft/world/item/ItemCrossbow.java
@@ -3,6 +3,7 @@ package net.minecraft.world.item;
 import com.google.common.collect.Lists;
 import com.mojang.math.Quaternion;
 import com.mojang.math.Vector3fa;
+import org.bukkit.inventory.EquipmentSlot; // Paper
 import java.util.List;
 import java.util.Random;
 import java.util.function.Predicate;
@@ -73,7 +74,11 @@ public class ItemCrossbow extends ItemProjectileWeapon implements ItemVanishable
         int j = this.e_(itemstack) - i;
         float f = a(j, itemstack);
 
-        if (f >= 1.0F && !d(itemstack) && a(entityliving, itemstack)) {
+        // Paper start - EntityLoadCrossbowEvent
+        if (f >= 1.0F && !d(itemstack) /*&& a(entityliving, itemstack)*/) {
+            final io.papermc.paper.event.entity.EntityLoadCrossbowEvent event = new io.papermc.paper.event.entity.EntityLoadCrossbowEvent(entityliving.getBukkitLivingEntity(), itemstack.asBukkitMirror(), entityliving.getRaisedHand() == EnumHand.MAIN_HAND ? EquipmentSlot.HAND : EquipmentSlot.OFF_HAND);
+            if (!event.callEvent() || !attemptProjectileLoad(entityliving, itemstack, event.shouldConsumeItem())) return;
+        // Paper end
             a(itemstack, true);
             SoundCategory soundcategory = entityliving instanceof EntityHuman ? SoundCategory.PLAYERS : SoundCategory.HOSTILE;
 
@@ -82,10 +87,13 @@ public class ItemCrossbow extends ItemProjectileWeapon implements ItemVanishable
 
     }
 
-    private static boolean a(EntityLiving entityliving, ItemStack itemstack) {
+    private static boolean attemptProjectileLoad(EntityLiving ent, ItemStack bow) { return a(ent, bow); } // Paper - EntityLoadCrossbowEvent - OBFHELPER
+    private static boolean attemptProjectileLoad(EntityLiving ent, ItemStack bow, boolean consume) { return a(ent, bow, consume); } // Paper - EntityLoadCrossbowEvent - OBFHELPER
+    private static boolean a(EntityLiving entityliving, ItemStack itemstack) { return a(entityliving, itemstack, true); };// Paper - add consume
+    private static boolean a(EntityLiving entityliving, ItemStack itemstack, boolean consume) { // Paper - add consume
         int i = EnchantmentManager.getEnchantmentLevel(Enchantments.MULTISHOT, itemstack);
         int j = i == 0 ? 1 : 3;
-        boolean flag = entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.canInstantlyBuild;
+        boolean flag = !consume || entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.canInstantlyBuild; // Paper - add consme
         ItemStack itemstack1 = entityliving.f(itemstack);
         ItemStack itemstack2 = itemstack1.cloneItemStack();
 
