From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Thu, 9 Apr 2020 21:20:33 -0400
Subject: [PATCH] Don't move existing players to world spawn

This can cause a nasty server lag the spawn chunks are not kept loaded
or they aren't finished loading yet, or if the world spawn radius is
larger than the keep loaded range.

By skipping this, we avoid potential for a large spike on server start.

diff --git a/src/main/java/net/minecraft/server/level/EntityPlayer.java b/src/main/java/net/minecraft/server/level/EntityPlayer.java
index e3721287cc18c8df81d1353084364966eb3f55ab..79003f43c4f15a7e5dd51587bc8c2f477bedb1b2 100644
--- a/src/main/java/net/minecraft/server/level/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/level/EntityPlayer.java
@@ -254,7 +254,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.serverStatisticManager = minecraftserver.getPlayerList().getStatisticManager(this);
         this.advancementDataPlayer = minecraftserver.getPlayerList().f(this);
         this.G = 1.0F;
-        this.c(worldserver);
+        //this.c(worldserver); // Paper - don't move to spawn on login, only first join
         this.co = minecraftserver.a(this);
 
         this.cachedSingleHashSet = new com.destroystokyo.paper.util.misc.PooledLinkedHashSets.PooledObjectLinkedOpenHashSet<>(this); // Paper
@@ -306,6 +306,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     }
     // CraftBukkit end
 
+    public final void moveToSpawn(WorldServer worldserver) { c(worldserver); } // Paper - OBFHELPER
     private void c(WorldServer worldserver) {
         BlockPosition blockposition = worldserver.getSpawn();
 
@@ -483,7 +484,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
                 position = Vec3D.a(((WorldServer) world).getSpawn());
             }
             this.world = world;
-            this.setPosition(position.getX(), position.getY(), position.getZ());
+            this.setPositionRaw(position.getX(), position.getY(), position.getZ()); // Paper - don't register to chunks yet
         }
         this.playerInteractManager.a((WorldServer) world);
     }
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 578ad7c60cac59d4e77ddf3cfcb6ba9fdbf42d9b..675d41e1140ed2b9e99cd7c2acedb9af80c3bfb2 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -207,6 +207,8 @@ public abstract class PlayerList {
             worldserver1 = worldserver;
         }
 
+        if (nbttagcompound == null) entityplayer.moveToSpawn(worldserver1); // Paper - only move to spawn on first login, otherwise, stay where you are....
+
         entityplayer.spawnIn(worldserver1);
         entityplayer.playerInteractManager.a((WorldServer) entityplayer.world);
         String s1 = "local";
