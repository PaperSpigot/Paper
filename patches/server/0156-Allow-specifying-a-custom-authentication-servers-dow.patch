From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kashike <kashike@vq.lc>
Date: Thu, 17 Aug 2017 16:08:20 -0700
Subject: [PATCH] Allow specifying a custom "authentication servers down" kick
 message


diff --git a/src/main/java/io/papermc/paper/PaperConfig.java b/src/main/java/io/papermc/paper/PaperConfig.java
index f01186f8d771ebb9490876e7085c17fcdfc47090..5181c60d667f94d4872506d92cf68360a2f65952 100644
--- a/src/main/java/io/papermc/paper/PaperConfig.java
+++ b/src/main/java/io/papermc/paper/PaperConfig.java
@@ -1,5 +1,6 @@
 package io.papermc.paper;
 
+import com.google.common.base.Strings;
 import com.google.common.base.Throwables;
 
 import java.io.File;
@@ -273,4 +274,9 @@ public class PaperConfig {
     private static void suggestPlayersWhenNull() {
         suggestPlayersWhenNullTabCompletions = getBoolean("settings.suggest-player-names-when-null-tab-completions", suggestPlayersWhenNullTabCompletions);
     }
+
+    public static String authenticationServersDownKickMessage = ""; // empty = use translatable message
+    private static void authenticationServersDownKickMessage() {
+        authenticationServersDownKickMessage = Strings.emptyToNull(getString("messages.kick.authentication-servers-down", authenticationServersDownKickMessage));
+    }
 }
diff --git a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
index b903a19258361036c2a5cfb64f60fa5ddb4ec649..c6ef92ab1a082a9d4338e420e434f3f526757797 100644
--- a/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerLoginPacketListenerImpl.java
@@ -297,6 +297,10 @@ public class ServerLoginPacketListenerImpl implements ServerLoginPacketListener
                         ServerLoginPacketListenerImpl.this.gameProfile = ServerLoginPacketListenerImpl.this.createFakeProfile(gameprofile);
                         ServerLoginPacketListenerImpl.this.state = ServerLoginPacketListenerImpl.State.READY_TO_ACCEPT;
                     } else {
+                            // Paper start
+                            if (io.papermc.paper.PaperConfig.authenticationServersDownKickMessage != null) {
+                                ServerLoginPacketListenerImpl.this.disconnect(new TextComponent(io.papermc.paper.PaperConfig.authenticationServersDownKickMessage));
+                            } else // Paper end
                         ServerLoginPacketListenerImpl.this.disconnect(new TranslatableComponent("multiplayer.disconnect.authservers_down"));
                         ServerLoginPacketListenerImpl.LOGGER.error("Couldn't verify username because servers are unavailable");
                     }
